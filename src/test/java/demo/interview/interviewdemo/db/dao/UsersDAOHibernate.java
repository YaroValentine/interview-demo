package demo.interview.interviewdemo.db.dao;import demo.interview.interviewdemo.db.ServiceDB;import demo.interview.interviewdemo.db.entity.UserEntity;import demo.interview.interviewdemo.db.jpa.EmfProvider;import demo.interview.interviewdemo.db.jpa.JpaTransactionManager;import java.util.UUID;public class UsersDAOHibernate extends JpaTransactionManager implements UsersDAO {    public UsersDAOHibernate() {        super(EmfProvider.INSTANCE.getEmf(ServiceDB.DB_AUTH).createEntityManager());    }    @Override    public int createUser(UserEntity user) {        user.setPassword(passwordEncoder.encode(user.getPassword()));        persist(user);        return 0;    }    @Override    public UserEntity readUser(UUID uuid) {        return em.find(UserEntity.class, uuid);    }    @Override    public int updateUser(UserEntity user) {        merge(user);        return 1;    }    @Override    public String getUserId(String userName) {        return em.createQuery("select u from UserEntity u where username=:username", UserEntity.class)                .setParameter("username", userName)                .getSingleResult()                .getId()                .toString();    }    @Override    public int removeUser(UserEntity user) {        remove(user);        return 0;    }}